//
//  STIntroModel.h
//  CourseProject
//
//  Created by 王继昇 on 2020/12/15.
//

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

@interface STIntroModel : NSObject

@end

NS_ASSUME_NONNULL_END




/*********************************************
 *OC介绍
 *  OC可以说是一种面向对象的C语言,在Objective-C的代码中可以有C和C++语句,它可以调用C的函数,也可以通过C++对象访问方法。1.早在20世纪80年代早期，Bard Cox发明了Objective C，是扩充的C，面向对象的编程语言。
 *  2.NEXTSTEP简称NS
 *  a.1985年，Steve Jobs成立了NeXT公司。\nb.1988年，NeXT SoftWare公司获得了OC的语言授权，NEXTSTEP环境成为了苹果操作系统，创建的开发包。MACOS\nc.1996年，12月20日，苹果公司宣布收购了NeXT software公司，NEXTSTEP环境为apple公司下主要开发、发行操作系统OSX的基础，这个开发环境的版本被苹果公司命名为Cocoa（可可）框架\nNSString NS=NEXTSTEP
 *  3. Cocoa框架\na.Cocoa是苹果公司为MAC OS X所创建的原生面向对象编程环境。\nb.Cocoa应用程序一般在苹果公司的工具xcode上用Objective C编写的。\nc.使用Cocoa编程环境开发的应用程序叫Cocoa应用。app->application->应用程序\nCocoa Touch框架 ->CTapp\nd.Cocoa框架主要由两部分组成，Fundation框架和Application Kit框架。\ne.Fundation框架，基础框架，包括：字符串、数字、数组、字典、集合等
 *  f.Application Kit框架，应用程序工具箱，它包括了实现程序图形、事件驱动和用户界面的全部对象，窗口、对话框、按钮、菜单、滚动条、文本框等，而且这个列表还在不断的添加。
 *  IOS苹果公司硬件上的一个操作系统，苹果公司便携设备上的操作系统。在2007年1月9日，MacWorld大会上公布的这个系统，最初设计给iphone使用的，后来陆续用到ipod  touch、ipad、apple TV等苹果产品。
 *
 */




/*********************************************
 *
 *  一、面向对象
 Anything is Object.万物皆对象。
 现实中的对象是一种客观存在，
 程序中的对象是一片内存中的数据。
 1.对象
         现实中的对象学生
          有什么？姓名、年龄
          能干什么？学习
        计算机中的对象Student
         属性(成员) age，name
         方法(函数)study()

       用解决现实中的问题的方法，来解决计算机问题。
 2.类
 设计(图纸)(梦想中)---努力实现--->楼(现实)
     代码(文件)     ---执行加载--->内存(数据)
         类                 ---实例化    --->对象

 类是一种主观思想，是对我们需要解决问题的一种抽象，是创建对象的模型，就是类型，用户自定义类型。
 对象就是具体的数据，计算机会把类->实例化->对象。
 
 一个类是由两个部分组成的 *.h文件和*.m文件
             1).h文件 定义类的interface部分(声明)
                 @interface Student : NSObject
                     @property int age;//声明属性
                     -(void)study;//声明方法
                  @end
             2).m文件 定义类的implemention部分(实现)
             @implementation Student
                 //方法的定义、实现
                 -(void)study{
                     NSLog(@"学生执行了study方法");
                 }
             @end
         b.类的实例化->对象
             1)main.m文件中的->main函数(程序入口)执行程序
             2)能过类发送alloc，通过一个类创建对象，通过stu变量，找到内存的对象。
             3)可以向对象发送消息(方法)，此时对象就会响应消息，执行方法。
             4)对象如果有属性，对象.属性 = 值，给对象的属性赋值


 
 二、方法
 对象可以干什么，功能。
     1.函数与方法有什么区别?
         函数只是一个程序的代码段，与类无关系。
         方法，类的一部分，代表对象可以干什么。
         正常来讲，类必须实例化，方法才可以使用，实例方法，调用方法时，也叫做向对象发送消息。
             .m:message
 2.语法格式 语法格式与函数非常相似，但截然不同。使用方法时，在.h文件中声明，在.m文件中实现。
         a.-(返回值类型) 方法名; //无参的方法            eg:-(void)method;
         b.-(返回值类型) 方法名:(参数类型)参数名;//有参的方法
             eg:-(void)method3:(int)num;
 c.-(返回值类型) 方法名:(参数1类型)参数名1 :(参数2类型)参数名2 :(参数n类型)参数名n;//多参的方法
             eg:-(void)method4:(int)arg1 :(int)arg2;
         注：":"符号也是方法名的一部分
             method、method3:、method4::。
  d.*-(返回值类型) 部分方法名:(参数1类型)参数名1
             部分方法名2:(参数2类型)参数名2
             部分方法名n:(参数n类型)参数名n;
             部分方法名起到提示作用，并不影响程序的执行
             
 eg:-(void)printInfoWithAge:(int)age
                                          andGender:(char)gender
                                          andSalary:             (double)salary;
 三、实例变量
 1.一个对象会有自己独特的数据和别的对象不同，这些数据会保存在一些特殊的变量中，这种变量叫实例变量。类的每个实例(对象)都有一份。
                         类                       对象(实例)(引用)
                         内存中没有       内存中有
                         成员变量  alloc实例变量-
                         成员方法           实例方法
 2.用一个类，创建出一个对象，那么我们就说这个对象就是此类的实例，一个类可以有很多实例(对象)，每一个实例都拥有一个和其它实例不同的数据，这些数据保存在实例变量中。
 3.实例变量的声明，可以放在.h文件中，也可以放在.m文件，实例变量就变为私有的，只有当前对象才可以访问。
         方法也是一样，放在.h文件中声明，公有方法。
         方法在.h文件中没有声明，私有方法，是不合法的。
 四、属性
 1.在OC中，属性提供了setter和getter方法，本质上属性就是方法，属性的值是由实例变量来保存的。
     
 2.属性的本质
         一般三个部分组成
         a.保存属性值的实例变量 int _age;
         b.setter和getter方法的声明与实现
             1.)setter方法：方法名:“set”+属性名并首子母大写+“:”+和属性类型一样的参数，无返回值。age
                 -(void)setAge:(int)newAge;
             2.)getter方法：方法名和属性名一样，没有参数，返回值类型和属性类型一样。
                 -(int)age;
 c.setter方法和getter方法的实现
         setter方法的实现主要用来给属性赋值的
         getter方法的实现主要用来读取属性值的
         对象.属性 = 值;=>会自动调用setter方法
         变量 = 引用.属性;=>会自动调用getter方法
         stu.age = 18;//给属性赋值 setter
 NSLog(@“age:%d",stu.age);
 //取属性值 getter

 属性的演变过程
     1.本质上的属性
         a.实例变量
         b.setter/getter
         c.点语法
     2.声明式属性
         a.实例变量
         b.@property int age; setter/getter自动生成
             @sythesize age = _age;属性与实例变量的关系
         c.点语法
     3.ios5.0
         a.自动生成实例变量
         b.@property int age; setter/getter自动生成
             @sythesize age = _age;属性与实例变量的关系
         c.点语法
     4.***ios6.0
         a.自动生成实例变量
         b.@property int age; setter/getter自动生成
             自动生成@sythesize
         c.点语法

 一、初始化方法
 用来初始化对象的方法。
     1.初始化方法的规则：
         a.初始化方法都是以"init"开头的，无参的初始化方法叫"init"，有参的都以"initWith..."开头。
         b.初始化方法的返回值为"id"类型。(void*)
         c.初始化方法的一般格式
             super代表类的父类，[super init]是通知父类去做底层的初始化操作。
             self代表当前对象或当前类，self就是当前对象的引用。(地址)
             self = [super init];
             if(self){//初始化，不一定成功，不成功值就为nil(NULL)
                 初始化对象的属性值...
             }
             return self;





 二、实例方法和类方法
 1.只能通过实例调用的方法叫实例方法。"-"
 2.只能通过类调用的方法叫类方法。”+"
 3.实例方法与类方法区别
         a.实例方法与实例有关系的，所以实例方法可以调用、读取实例中的实例变量或属性。
         b.类方法与实例无关系的，所以类方法不可以调用、读取实例例中实例变量和属性。
         c.在类方法中可以创建对象，当然访问该对象的实例变量和属性。
 三、工厂方法
 生产(创建)对象的方法，叫工厂方法。
         类中经常会出现一些工厂方法，其目的是为了方便创建对象。
         规则：
             1.工厂方法一定是类方法
             2.工厂方法返回id类型，因为要返回一个刚创建好的对象，类似初始化方法。
             3.工厂方法的方法名一定以类名开头，注意去除了前缀和首字母要小写。
 四、self关键字
 代表当前对象或者当前类。
     1.在实例方法中的self，通常来讲就是代表当前对象。
     2.在类方法中的self，通常来来讲就是代表当前类。
 五、编程规范
 1.标识符
         给变量、函数、类、方法、常量等起名字。
         a.必须以_和字母开头
         b.只能包含数字、_和字母
         c.不能与关键字冲突
         d.大小写敏感
         e.长度是不限的
 2.命名规范
         a.类、分类、扩展、协议等类型起名时，一般加前缀(2~3个字母组成)，并且每个单词的首字母大写。
         b.驼峰标识：如果标识符由多个单词组成，每个单词的首字母大写。
         c.属性、方法、变量的首字母小写，其后的每个单词的首字母大写。
         d.常量一般大写，单词之间"_"隔开。
             数字和字符是常量外，
         const int MAX_NUM = 10;//常量
 3.OC特有的代码风格
         a.无参的初始化方法,"init"命名，有参的以"initWith … "开头。eg:
         [[TRStudent alloc]init];
         [[TRStudent alloc]initWithAge:18 andSex:'M'];
         b.工厂方法，以小写的类名开头，有参的工厂方法，"小写类名With"开头。
         [TRStudent student];
         [TRStudent studentWithAge:18 andSex:'M'];
         c.其它
             一般方法的方法名不能以new开头，new开头的方法基本上是用来创建对象的。
 4.补充
         a.代码的结构性，一定要缩进。
             (command(win)+a全选,control(ctrl)+i自动代码缩进)
         b.当一个方法比较长时，可以用空行的方式，将方法分成几个模块。
 
 */
